version: "3.9"

services:
  ws-handler:
    build:
      context: ./services/ws-handler
      dockerfile: Dockerfile
    environment:
      PORT: 8000
      RABBITMQ_URI: amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@rabbitmq:5672
    depends_on:
      rabbitmq:
          condition: service_healthy
  http-server:
    build:
      context: ./services/http-server
      dockerfile: Dockerfile
    environment:
      PORT: 8000
      MONGO_URI: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/${MONGO_DATABASE}?authSource=admin
    depends_on:
      mongo:
          condition: service_healthy
    ports:
      - target: 8000
        published: 8001


  document-edit-server:
    build:
      context: ./services/document-edit-server
      dockerfile: Dockerfile
    environment:
      MONGO_URI: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/${MONGO_DATABASE}?authSource=admin
      REDIS_URI: redis://redis:6379
      RABBITMQ_URI: amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@rabbitmq:5672
    depends_on:
      mongo:
          condition: service_healthy
      redis:
          condition: service_healthy
      rabbitmq:
          condition: service_healthy

  mongo:
    image: mongo:5.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
      MONGO_INITDB_DATABASE: $MONGO_DATABASE
    volumes:
      - ./mongo_initdb:/docker-entrypoint-initdb.d

    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis:6.2
    healthcheck:
      test: "redis-cli ping"
      interval: 1s
      timeout: 3s
      retries: 30

  rabbitmq:
    image: rabbitmq:3.9
    environment:
      RABBITMQ_DEFAULT_USER: $RABBITMQ_USERNAME
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_PASSWORD
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
